version: '3.2'
services:
  postgres:
    image: "postgres:12"
    environment:
        - POSTGRES_HOST_AUTH_METHOD=trust

  rskj:
    build: ./docker/rskj
    container_name: rsk-node-regtest
    entrypoint: "/usr/bin/java -Drpc.providers.web.ws.enabled=true -Drpc.providers.web.ws.port=8546 Drpc.providers.web.http.port=8545 -cp /usr/share/rsk/rsk.jar co.rsk.Start --regtest --reset> /dev/null 2>&1 &"
    volumes:
      - rsk-node-storage:/data
    restart: unless-stopped
    networks:
      - rsk-node-regtest-network
    ports:
      - "8545:8545"
      - "8546:8546"

  dev-ticker:
    image: "matterlabs/dev-ticker:latest"
    volumes:
      - ./etc/tokens/:/etc/tokens

  dev-liquidity-token-watcher:
    image: "matterlabs/dev-liquidity-token-watcher:latest"
    env_file:
      - ./etc/env/docker.env
    volumes:
      - ./etc/tokens/:/etc/tokens

  zk:
    image: "matterlabs/zk-environment:latest"
    depends_on:
      - postgres
      - geth
      - dev-ticker
      - dev-liquidity-token-watcher
    command: tail -f /dev/null
    volumes:
      - .:/usr/src/zksync
      - /usr/src/cache:/usr/src/cache
      - /usr/src/keys:/usr/src/keys
    environment:
      - IN_DOCKER=true
      - CACHE_DIR=/usr/src/cache
      - SCCACHE_CACHE_SIZE=50g
      - CI=1
